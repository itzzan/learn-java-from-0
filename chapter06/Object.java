
public class Object {
	//编写一个main方法
	public static void main(String[] args) {
		//张老太养了两只猫猫:一只名字叫小白,今年 3 岁,白色。
		//还有一只叫小花,今年 100 岁,花色。请编写一个程序，
		//当用户 输入小猫的名字时，就显示该猫的名字，年龄，颜色。
		//如果用户输入的小猫名错误，则显示 张老太没有这只猫猫
		
		//1. 单独变量来解决 - 不利于数据的噶案例
		//第一只猫
		// String cat1Name = "小白";
		// int cat1Age = 3;
		// String cat1Color = "白色";

		// //第二只猫
		// String cat2Name = "小花";
		// int cat2Age = 100;
		// String cat2Color = "花色";

		// //数组 - 数据类型体现不出来
		// //		 只能通过[下标]来获取信息，造成变量名字和内容的对应关系不明确
		// //		 不能体现猫的行为
		// String[] cat1 = {"小白", "3", "白色"};
		// String[] cat2 = {"小花", "100", "花色"};

		//使用oop面向对象来解决
		//实例化一只猫（创建一只猫对象）
		//new Cat() : 创建一只猫
		//Cat cat1 = new Cat() ：把创建的猫赋给cat1
		//cat1 就是一个对象
		Cat cat1 = new Cat();
		cat1.name = "小白";
		cat1.age = 3;
		cat1.color = "白色";
		cat1.weight = 10;

		//创建了第二只猫，并赋给cat2
		Cat cat2 = new Cat();
		cat2.name = "小花";
		cat2.age = 100;
		cat2.color = "花色";
		cat2.weight = 20;

		//怎么使用 - 怎么访问对象的属性
		System.out.println("第一只猫信息" + cat1.name + " " + cat1.age + " " + cat1.color + " " + cat1.weight);
		System.out.println("第二只猫信息" + cat2.name + " " + cat2.age + " " + cat2.color + " " + cat2.weight);


	}
}


//使用面向对象的方式来解决养猫问题
//
//定义一个猫类 Cat - 自定义的数据类型
class Cat {
	//属性
	String name;//名字
	int age;//年龄
	String color;//颜色
	double weight;//体重
}